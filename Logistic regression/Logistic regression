{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Logistic regression","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOrALc9Ex4L2T7V2JqQWvwn"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"8XZhFFnbQpNA","colab_type":"text"},"source":["Подключение библиотек"]},{"cell_type":"code","metadata":{"id":"96GSv1_wQof7","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1592953649197,"user_tz":-180,"elapsed":864,"user":{"displayName":"Sergey Milantev","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgNJnP7hTsUG9u2Ja9veyDPOkuGeC7MHRJy2vYc5g=s64","userId":"04929025458703122590"}}},"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn import metrics\n","from sklearn.metrics import classification_report\n","from sklearn.metrics import f1_score"],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Pqbr9peqgrRT","colab_type":"text"},"source":["Подключение gdrive"]},{"cell_type":"code","metadata":{"id":"dioWYv-iQD2R","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1592953649198,"user_tz":-180,"elapsed":859,"user":{"displayName":"Sergey Milantev","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgNJnP7hTsUG9u2Ja9veyDPOkuGeC7MHRJy2vYc5g=s64","userId":"04929025458703122590"}},"outputId":"3e1be5d6-0084-466c-9840-27ebe6040441"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"phA61UOcRZr6","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1592953649198,"user_tz":-180,"elapsed":853,"user":{"displayName":"Sergey Milantev","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgNJnP7hTsUG9u2Ja9veyDPOkuGeC7MHRJy2vYc5g=s64","userId":"04929025458703122590"}},"outputId":"62fe92d1-162a-4b0a-ac51-cd6d89425142"},"source":["%cd '/content/drive/My Drive/Colab Notebooks/Data Science/Logistic regression'"],"execution_count":3,"outputs":[{"output_type":"stream","text":["/content/drive/My Drive/Colab Notebooks/Data Science/Logistic regression\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"PvsgRxyEQ-S-","colab_type":"text"},"source":["Обработка данных. Датасет конфет"]},{"cell_type":"code","metadata":{"id":"e_CthOBdQ_Ir","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":170},"executionInfo":{"status":"ok","timestamp":1592953649199,"user_tz":-180,"elapsed":850,"user":{"displayName":"Sergey Milantev","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgNJnP7hTsUG9u2Ja9veyDPOkuGeC7MHRJy2vYc5g=s64","userId":"04929025458703122590"}},"outputId":"2bccb57f-464d-45d9-cc53-af5d7420cb0a"},"source":["data = pd.read_csv(\"candy-data.csv\", delimiter=',', index_col='competitorname')\n","X = data.drop(['winpercent', 'Y'], axis=1)\n","y = data['Y']\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=30)\n","print(X_train.head())"],"execution_count":4,"outputs":[{"output_type":"stream","text":["                      chocolate  fruity  ...  sugarpercent  pricepercent\n","competitorname                           ...                            \n","Trolli Sour Bites             0       1  ...         0.313         0.255\n","Twizzlers                     0       1  ...         0.220         0.116\n","Haribo Sour Bears             0       1  ...         0.465         0.465\n","Tootsie Roll Midgies          1       0  ...         0.174         0.011\n","Haribo Happy Cola             0       0  ...         0.465         0.465\n","\n","[5 rows x 11 columns]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"UGH4XMC4RpOL","colab_type":"text"},"source":["Обучение модели"]},{"cell_type":"code","metadata":{"id":"1f2tMfjLRopS","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1592953649199,"user_tz":-180,"elapsed":846,"user":{"displayName":"Sergey Milantev","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgNJnP7hTsUG9u2Ja9veyDPOkuGeC7MHRJy2vYc5g=s64","userId":"04929025458703122590"}}},"source":["model = LogisticRegression(random_state=30, solver='lbfgs').fit(X_train, y_train)"],"execution_count":5,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ruH6i7XKSdrj","colab_type":"text"},"source":["Оценка модели"]},{"cell_type":"code","metadata":{"id":"9F-bmVzeSd84","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1592953649522,"user_tz":-180,"elapsed":1165,"user":{"displayName":"Sergey Milantev","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgNJnP7hTsUG9u2Ja9veyDPOkuGeC7MHRJy2vYc5g=s64","userId":"04929025458703122590"}},"outputId":"f9e912f3-3146-4ffb-8c4e-51f0b6e542ae"},"source":["predictions = model.predict(X_test)\n","clf_report = classification_report(y_test, predictions)\n","f_score = f1_score(y_test, predictions, average='macro')\n","\n","print('Predictions: {}'.format(predictions))\n","print(clf_report)\n","print('F1-score: {}'.format(f_score))"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Predictions: [0 1 1 1 0 1 0 0 0 0 0 1 0 0 1 0 1 1 0 1 0 0 0 1 1 1]\n","              precision    recall  f1-score   support\n","\n","           0       0.71      0.91      0.80        11\n","           1       0.92      0.73      0.81        15\n","\n","    accuracy                           0.81        26\n","   macro avg       0.82      0.82      0.81        26\n","weighted avg       0.83      0.81      0.81        26\n","\n","F1-score: 0.8074074074074074\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"IpLBHR4zW-bI","colab_type":"text"},"source":["Вычисление FPR и TPR и построение ROC-кривой (Receiver operating characteristic)\n","\n","ROC-кривая позволяет оценить качество бинарной классификации, отображает соотношение между верно классифицированными объектами с признаком (true positive rate - чувствительность модели) и ошибочно классифицированных объектов с признаком (false positive rate - специфичность модели)"]},{"cell_type":"code","metadata":{"id":"5qpaRur4VKjH","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":299},"executionInfo":{"status":"ok","timestamp":1592953649729,"user_tz":-180,"elapsed":1367,"user":{"displayName":"Sergey Milantev","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgNJnP7hTsUG9u2Ja9veyDPOkuGeC7MHRJy2vYc5g=s64","userId":"04929025458703122590"}},"outputId":"1e198f12-2d02-48ab-d355-925e7e145770"},"source":["fpr, tpr, thresholds = metrics.roc_curve(y_test, predictions)\n","roc_auc = metrics.auc(fpr, tpr) # Area under the curve (площадь под кривой)\n","\n","print('AUC: {}'.format(roc_auc))\n","plt.plot(fpr, tpr)"],"execution_count":7,"outputs":[{"output_type":"stream","text":["AUC: 0.8212121212121212\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7f631a476e80>]"]},"metadata":{"tags":[]},"execution_count":7},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}